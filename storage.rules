rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Règles pour les images de profil
    match /profile-images/{userId}/{allPaths=**} {
      // Lecture : autorisée pour tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Écriture : seulement pour le propriétaire du profil
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Règles pour les signatures électroniques
    match /signature-images/{userId}/{allPaths=**} {
      // Lecture : autorisée pour tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Écriture : seulement pour le propriétaire
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Règles pour les cachets électroniques
    match /stamp-images/{userId}/{allPaths=**} {
      // Lecture : autorisée pour tous les utilisateurs authentifiés
      allow read: if request.auth != null;
      
      // Écriture : seulement pour le propriétaire
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Règles pour le contenu (images et vidéos)
    match /content/{type}/{allPaths=**} {
      // Lecture : autorisée pour tous (contenu public)
      allow read: if true;
      
      // Écriture : seulement pour les utilisateurs authentifiés
      allow write: if request.auth != null;
    }
    
    // Règles pour les miniatures de vidéos
    match /content/thumbnails/{allPaths=**} {
      // Lecture : autorisée pour tous (contenu public)
      allow read: if true;
      
      // Écriture : seulement pour les utilisateurs authentifiés
      allow write: if request.auth != null;
    }
    
    // Règles générales pour les admins (accès complet)
    match /{allPaths=**} {
      // Les admins ont accès complet à tous les fichiers
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }
  }
}